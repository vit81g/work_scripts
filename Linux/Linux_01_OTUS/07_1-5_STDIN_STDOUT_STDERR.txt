******************* STDIN, STDOUT, STDERR *********************
STDIN - стандартный поток ввода
STDOUT - стандартный поток вывода
STDERR - стандартный поток ошибок

Номера потоков:
STDIN - 0
STDOUT - 1
STDERR - 2

*************** Перенаправление в файл ******************
после команды добавляем > и указываем имя файла
Важно индексы перенаправления: 
1> - перенаправление вывода в файл
2> - перенаправление ошибок в файл
Пример:
ls -l > stdout.txt

Для преренаправления ошибок после команды добавляем 2> и указываем имя файла
Пример:
ls -l sdhfgj 2> errors.txt
Результат (ошибка - неизвестный параметр sdhfgj):
┌──(vit81㉿kali)-[~/Documents/OTUS]
└─$ ls -l sdhfgj 2> errors.txt
                                                                                                      
┌──(vit81㉿kali)-[~/Documents/OTUS]
└─$ ls -l                     
total 176
-rw-r--r-- 1 vit81 vit81    54 Mar 26 13:00 errors.txt
-rw-r--r-- 1 vit81 vit81 11884 Mar 25 15:45 linux_start.txt
-rw-r--r-- 1 vit81 vit81 58593 Mar 25 17:27 STDIN_STDOUT_STDERR.jpg
-rw-r--r-- 1 vit81 vit81   491 Mar 26 12:57 STDIN_STDOUT_STDERR.txt
-rw-r--r-- 1 vit81 vit81 87590 Mar 25 13:02 user_group_other.jpg
-rw-r--r-- 1 vit81 vit81  4231 Mar 25 16:52 work_file.txt
                                                                  
┌──(vit81㉿kali)-[~/Documents/OTUS]
└─$ cat errors.txt 
ls: cannot access 'sdhfgj': No such file or directory

Пример совместного вывода результата или ошибок (stdout or stderr):
# Вданном коде мы применили последовательно несколько команд перенаправления в файл, результат выполнения или ошибок
──(vit81㉿kali)-[~/Documents/OTUS]
└─$ ls -l sdhfgj 2> errors.txt 1> stdout.txt

Для перезаписи используем >   (с додбавлением индекса)
Для дополнения записи в файл используем >> (с додбавлением индекса)

Пример дополнения записи в файл:
──(vit81㉿kali)-[~/Documents/OTUS]
└─$ ls -l sdhfgj 2>> errors.txt 1>> stdout.txt


****************** Порядок выполнения команд в bash *********************
bash работает справа налево
Пример:
ls -l > stdout.txt
Разбор:
1. проверка наличия файла stdout.txt, если нет, то создание файла
2. далее >; файл будет обнулен
3. запись результата команды ls -l в файл

Пример:
tail -n 50 log > log
# файл будет пустым!
Разбор:
1. проверка наличия файла log
2. далее >; файл будет обнулен (файл будет пустой, log 0 байт)
3. запись результата команды tail -n 50 log > log в файл (ничего запишет, так как ничего нет)

***************** Перенаправление в STDIN другой команды *********************
cat stdout.txt | grep ^-
grep фильтр
^ с начала строки
- файл (в linux файлы начинаются с - (-rw-r--r-- 1 vit81 vit81    54 Mar 26 13:08 errors.txt))
 
Пример (вывод только файлов, исключая директории  ^- это с начала строки и первый символ -)
─$ cat stdout.txt | grep ^-
-rw-r--r-- 1 vit81 vit81    54 Mar 26 13:08 errors.txt
-rw-r--r-- 1 vit81 vit81 11884 Mar 25 15:45 linux_start.txt
-rw-r--r-- 1 vit81 vit81 58593 Mar 25 17:27 STDIN_STDOUT_STDERR.jpg
-rw-r--r-- 1 vit81 vit81  3677 Mar 26 14:20 STDIN_STDOUT_STDERR.txt
-rw-r--r-- 1 vit81 vit81     0 Mar 26 14:20 stdout.txt
-rw-r--r-- 1 vit81 vit81 87590 Mar 25 13:02 user_group_other.jpg
-rw-r--r-- 1 vit81 vit81  4231 Mar 25 16:52 work_file.txt

# drwxr-xr-x 2 vit81 vit81  4096 Mar 26 14:20 dirnew исключена с помощью фильтра

Пример (используем два фильтра, - и linux; можно использовать любое значение):
# количество передач не ограниченно (только оперативной памятью), используем |
└─$ cat stdout.txt | grep ^- | grep linux
-rw-r--r-- 1 vit81 vit81 11884 Mar 25 15:45 linux_start.txt

# вывод только файлов и только со значением linux

# потоки данных 
Пример (не работает, выполнит только ls -l):
└─$ echo stdouy.txt | ls -l
total 188
drwxr-xr-x 2 vit81 vit81  4096 Mar 26 14:20 dirnew
-rw-r--r-- 1 vit81 vit81    54 Mar 26 13:08 errors.txt
-rw-r--r-- 1 vit81 vit81 11884 Mar 25 15:45 linux_start.txt
-rw-r--r-- 1 vit81 vit81 58593 Mar 25 17:27 STDIN_STDOUT_STDERR.jpg
-rw-r--r-- 1 vit81 vit81  4881 Mar 26 14:28 STDIN_STDOUT_STDERR.txt
-rw-r--r-- 1 vit81 vit81   490 Mar 26 14:20 stdout.txt
-rw-r--r-- 1 vit81 vit81 87590 Mar 25 13:02 user_group_other.jpg
-rw-r--r-- 1 vit81 vit81  4231 Mar 25 16:52 work_file.txt

Пример (работает, выполнит праиьно): 
┌──(vit81㉿kali)-[~/Documents/OTUS]
└─$ ls -l stdout.txt 
-rw-r--r-- 1 vit81 vit81 490 Mar 26 14:20 stdout.txt


*************************** tee ************************************
tee фактически дублирует поток вывода данных в файл и на экран

Пример:
└─$ ls -l | tee tee.txt
total 188
drwxr-xr-x 2 vit81 vit81  4096 Mar 26 14:20 dirnew
-rw-r--r-- 1 vit81 vit81    54 Mar 26 13:08 errors.txt
-rw-r--r-- 1 vit81 vit81 11884 Mar 25 15:45 linux_start.txt
-rw-r--r-- 1 vit81 vit81 58593 Mar 25 17:27 STDIN_STDOUT_STDERR.jpg
-rw-r--r-- 1 vit81 vit81  5873 Mar 26 14:35 STDIN_STDOUT_STDERR.txt
-rw-r--r-- 1 vit81 vit81   490 Mar 26 14:20 stdout.txt
-rw-r--r-- 1 vit81 vit81 87590 Mar 25 13:02 user_group_other.jpg
-rw-r--r-- 1 vit81 vit81  4231 Mar 25 16:52 work_file.txt
# выполнено два действия: запись в файл данных и вывод на экран
                                                                                                      
┌──(vit81㉿kali)-[~/Documents/OTUS]
└─$ cat tee.txt                          
total 188
drwxr-xr-x 2 vit81 vit81  4096 Mar 26 14:20 dirnew
-rw-r--r-- 1 vit81 vit81    54 Mar 26 13:08 errors.txt
-rw-r--r-- 1 vit81 vit81 11884 Mar 25 15:45 linux_start.txt
-rw-r--r-- 1 vit81 vit81 58593 Mar 25 17:27 STDIN_STDOUT_STDERR.jpg
-rw-r--r-- 1 vit81 vit81  5873 Mar 26 14:35 STDIN_STDOUT_STDERR.txt
-rw-r--r-- 1 vit81 vit81   490 Mar 26 14:20 stdout.txt
-rw-r--r-- 1 vit81 vit81 87590 Mar 25 13:02 user_group_other.jpg
-rw-r--r-- 1 vit81 vit81  4231 Mar 25 16:52 work_file.txt

# результат выполнения cat tee.txt содержимое созданного файла tee.txt

Пример с дополнением данных в файл (без обнуления и перезаписи):
# добавляем ключ -a
└─$ ls -l | tee -a tee.txt


*********************** потоки и указатели **********************
Мы хотим перенаправить вывод данных в файл и в тот же файл направить ошибки
& означает перенаправление по указателю
Используем конструкцию 2>&1, которая означает, что мы перенаправили данные в файл и далее направляем ошибки 2> в тот же файл что и данные &1

Пример1:
└─$ ls -l sdgs ./ 1> file.txt 2>&1    
Разбор:
1. bash действует по другому: сначала выполнить правую часть 1> file.txt 2>&1, но выполнит слева направо. Сначала 1> file.txt, затем 2>&1 (тоже что и 2> file.txt)

Пример2:
└─$ ls -l sdgs ./ 2>&1 | grep tee.txt
Результат:
1. сначала перенаправить поток 1 на поток ввода команды grep
2. поток 2 туда жу куда смотрит поток 1

Пример3:
# /dev/null отправление данных потока в никуда
└─$ ls -l sdgs ./ 2>&1 1> /dev/null | grep sdg
ls: cannot access 'sdgs': No such file or directory
Разбор:
1. интерпритируем | 
2. grep sdg 
3. поток 2 перенаправляется туда куда смотрит поток 1, а поток 1 уже смотрит на | grep
4. перенаправить поток 1 в /dev/null, то есть перенаправить в никуда 
5. поток 2 никуда не девается, то есть поток 2 получает | grep 
6. поток 1 получает адрес /dev/null 

Итог:
1. Возможно ли перенаправить STDERR в один файл, а STDOUT в другой?
# да
1>file1 2>file2

2. В файле file.log 50 строк. Я хочу оставить последние 5. Для этого я выполняю команду tail -5 file.log. Что после этого будет в файле file.log
# перезапишется файл
Ничего, файл будет пустой 

3. Я хочу сделать лог файл для команды command. Для этого я составлю вот такую конструкцию: command > log. В файл log будет записан...
Только STDOUT команды cimmand

4. Как мне отправить STDOUT и на экран и в файл
Нужно использовать команду tee

5. Что делает команда > file ?
5.1 Если файл не существует - создаст его
5.2 Далее будет ждать ввода текста для отправки его в файл (простейший вариант редактора)

6. Как перенаправить STDERR первой команды на STDIN второй команды
com1 2>&1 1> /dev/null | com2

7. Как мне дописать STDOUT команды com в файл?
com 1>>file

8. Как перенаправить STDERR команды com в файл?
com 2>file

9. Как перенаправить STDOUT первой команды на STDIN второй команды
com1 | com2

10. Какое максимальное кол-во команд можно объединять через |
Ограничений нет

11. Как передать содержимое файла на STDIN программе?
prog < file

12. Как перенаправить STDOUT команды com в файл?
com 1> file

13. Как перенаправить STDERR и STDOUT команды com в один файл
com 1> file 2>&1
