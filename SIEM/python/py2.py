"""
Скриат предназначен для обработки выгрузки из матрицы доступа ИУС,
в формате csv. Необходимо создать файл (список логинов) со списком значений
для фильтрации.
В итоговой файл будут записаны значения которые будут совпадать в файле csv
с данными из списка логинов. Итоговый файл открываем табличным редактором.
Все три файла должны находиться в директории запуска скрипта
"""

from collections import Counter

# Вводная информация
print("Рабочий файл выгрузки должен иметь расширение csv")
print("Файл для вывода результатов должен быть создан\nи находиться в каталоге запуска скрипта")

"""
Ввод данных, названия файлов
"""
openFileWork = input("Введите файл выгрузки из МД: ")
openFileUser = input("Введите файл для записи результатов: ")

""" Работа с файлами """
# открытие  файла на чтение. r - чтение.
file1 = open(openFileWork, "r")
# открытие  файла на запись. w - запись.
file2 = open(openFileUser, "w")

# Построчное чтение данных из файлов
lines = file1.readlines()

list_all =[]

# функция перевода элементов списка в словарь со значением количества повторов
def count_elem(lst):
    # Используем Counter для подсчета количества повторений
    counts = Counter(lst)
    # создаем словарь в котором будут элементы списка, а значениями их количество
    result_dict = dict(counts)
    return result_dict

# Функция записи словаря в файл, записывает ключ и значание, далее делает сброс на другую строку
def write_dict(dictionary, filename):
    with open(filename, 'w') as file:
        for key, value in dictionary.items():
            file.write(f"{key}: {value}\n")

"""
Цикл обработки данных из файла
данные из рабочего файла csv и создает список пользователей по UserID
Далее запускаем две функции count_elem и write_dict
"""
# перебор данных в первом цикле - обработка рабочего файла
for line in lines:
    # создание списка из строки
    list1 = line.split(',')
    if len(list1)> 1:
        list_all.append(list1[13])
    else:
        continue

result = count_elem(list_all)
print(result)

write_dict(result, openFileUser)

""" Закрытие файлов """
file1.close
file2.close

# Сообщение о завершении работы
print("\n")
print("****************************************")
print("Обработка данных произведена")
print("****************************************")

